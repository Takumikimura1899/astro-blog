---
import BaseLayout from '@/layouts/BaseLayout.astro'
import { getBlogDetail, getBlogs } from '@/lib/microcms'
import { getFormattedYearMonthDay } from '@/utils/helper/getFormattedYearMonthDay'
import hljs, { type HighlightResult } from 'highlight.js'
import { load } from 'cheerio'
import 'highlight.js/styles/a11y-dark.css'
import CategoryBadge from '@/components/ui/blog/CategoryBadge.astro'

export async function getStaticPaths() {
  const response = await getBlogs({ fields: ['id'] })
  return response.contents.map((content) => ({ params: { id: content.id } }))
}

const { id } = Astro.params
const blog = await getBlogDetail(id)

const $ = load(blog.body)

$('div[data-filename]').each((_, element) => {
  $(element).prepend(`<span>${$(element).attr('data-filename')}</span>`)
})

$('pre code').each((_, element) => {
  const language = $(element).attr('class') || ''
  let result: HighlightResult

  if (language == '') {
    // 言語が入力なしの場合、自動判定
    result = hljs.highlightAuto($(element).text())
  } else {
    // 言語が入力ありの場合、入力された言語で判定
    result = hljs.highlight($(element).text(), {
      language: language.replace('language-', ''),
    })
  }
  $(element).html(result.value)
  $(element).addClass('hljs')
})

blog.body = $.html()
---

<BaseLayout>
  <main>
    <h1>{blog.title}</h1>
    <div class="flex">
      <div>
        <div>
          {blog.category && <CategoryBadge {...blog.category} />}
          {blog.category2 && <CategoryBadge {...blog.category2} />}
        </div>
      </div>
      <p>公開日時:{getFormattedYearMonthDay(blog.publishedAt)}</p>
    </div>
    <div set:html={blog.body} />
  </main>
</BaseLayout>

<style>
  .flex {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }
</style>
